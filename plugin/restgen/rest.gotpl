{{ reserveImport "context"  }}
{{ reserveImport "fmt"  }}
{{ reserveImport "io"  }}
{{ reserveImport "strconv"  }}
{{ reserveImport "time"  }}
{{ reserveImport "sync"  }}
{{ reserveImport "errors"  }}
{{ reserveImport "bytes"  }}

{{ reserveImport "github.com/vektah/gqlparser/v2" }}
{{ reserveImport "github.com/vektah/gqlparser/v2/ast" }}
{{ reserveImport "github.com/99designs/gqlgen/graphql" }}
{{ reserveImport "github.com/99designs/gqlgen/graphql/introspection" }}

{{ $root := . }}

// Query
{{ $object := .QueryRoot -}}
{{ range $field := $object.Fields -}}
	type query_{{ $field.Name }} struct {
	{{ range $innerField := $field.TypeReference.Definition.Fields -}}	
		{{- $innerObject := ($root.Objects.ByName $innerField.Name) -}}
		{{- if $innerObject -}}
			{{- $innerField.Name }} struct {
				{{ range $field := $innerObject.Fields -}}
					{{- $field.Name }} int
				{{ end -}}
			}
		{{- else -}}
			{{- $innerField.Name }} interface{}
		{{ end -}}
	{{ end -}}
	}
{{ end }}

// Mutation
{{ $object := .QueryRoot -}}
{{ range $field := $object.Fields -}}
	// mutation_{{ $field.Name }} := "{
	{{- range $innerField := $field.TypeReference.Definition.Fields -}}	
		{{- $innerObject := ($root.Objects.ByName $innerField.Name) -}}
		{{- if $innerObject -}}
			{{- $innerField.Name }}{
				{{- range $field := $innerObject.Fields -}}
					{{- $field.Name }},
				{{- end -}}
			}
		{{- else -}}
			{{- $innerField.Name }},
		{{- end -}}
	{{- end -}}
	}"
{{ end }}
